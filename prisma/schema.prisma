// This is your Prisma schema file for PostgreSQL
// Learn more at https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // PostgreSQL connection string from .env
}

enum UserType {
  TEAM_MEMBER
  TEAM_MANAGER
  ADMIN
}

enum TaskState {
  ToDo
  InProgress
  Completed
  Approved
}

enum TaskPriority {
  high
  medium
  low
}

model Task {
  id           String       @id @default(cuid())
  text         String
  createdAt    DateTime     @default(now())
  createdBy    User         @relation("TaskCreator", fields: [createdById], references: [id])
  assignedTo   User?        @relation("TaskAssignee", fields: [assignedToId], references: [id])
  createdById  String
  assignedToId String?
  deadline     DateTime
  state        TaskState    @default(ToDo)
  priority     TaskPriority @default(medium) // Added priority field
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  username      String   @unique
  password      String
  createdAt     DateTime @default(now())
  userType      UserType @default(TEAM_MEMBER) // Default enum value
  managerId     String?
  manager       User?    @relation("UserToManager", fields: [managerId], references: [id]) // Assigned manager
  team          User[]   @relation("UserToManager") // Users managed by this user
  tasksCreated  Task[]   @relation("TaskCreator")
  tasksAssigned Task[]   @relation("TaskAssignee")
  rewardPoints  Int      @default(0) // Added rewardPoints field
}
