{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/types/index.ts"],"sourcesContent":["export enum UserType {\n  TEAM_MEMBER = 'TEAM_MEMBER',\n  TEAM_MANAGER = 'TEAM_MANAGER',\n  ADMIN = 'ADMIN'\n}\n\nexport enum TaskState {\n  ToDo = 'ToDo',\n  InProgress = 'InProgress',\n  Completed = 'Completed'\n}\n\nexport interface Task {\n  id: string;\n  text: string;\n  createdAt: Date;\n  createdById: string;\n  assignedToId?: string | null;  // Optional field\n  deadline: Date;\n  state: TaskState;\n  \n  // Relations (optional - include if you need them in the UI)\n  createdBy?: User;\n  assignedTo?: User | null;\n}\n\nexport interface User {\n  id: string;\n  email: string;\n  username: string;\n  password: string;\n  createdAt: Date;\n  userType: UserType;\n  managerId?: string | null;\n  \n  // Relations (optional - include if you need them in the UI)\n  manager?: User | null;\n  team?: User[];\n  tasksCreated?: Task[];\n  tasksAssigned?: Task[];\n} "],"names":[],"mappings":";;;;AAAO,IAAA,AAAK,kCAAA;;;;WAAA;;AAML,IAAA,AAAK,mCAAA;;;;WAAA"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/components/Task.tsx"],"sourcesContent":["import React from 'react';\nimport { Task as TaskType } from '../types';\nimport { useDraggable } from '@dnd-kit/core';\n\ninterface TaskProps {\n  task: TaskType;\n}\n\nexport function Task({ task }: TaskProps) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: task.id,\n    data: task\n  });\n\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      {...listeners}\n      {...attributes}\n      className=\"bg-white p-4 mb-2 rounded shadow cursor-move\"\n    >\n      {task.text}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;;;;AAMO,SAAS,KAAK,EAAE,IAAI,EAAa;;IACtC,MAAM,EAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAC,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAClE,IAAI,KAAK,EAAE;QACX,MAAM;IACR;IAEA,MAAM,QAAQ,YAAY;QACxB,WAAW,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC;IACjE,IAAI;IAEJ,qBACE,6LAAC;QACC,KAAK;QACL,OAAO;QACN,GAAG,SAAS;QACZ,GAAG,UAAU;QACd,WAAU;kBAET,KAAK,IAAI;;;;;;AAGhB;GArBgB;;QACyC,8JAAA,CAAA,eAAY;;;KADrD"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/components/Column.tsx"],"sourcesContent":["import React from 'react';\nimport { Task as TaskType, TaskState } from '../types';\nimport { Task } from './Task';\nimport { useDroppable } from '@dnd-kit/core';\n\ninterface ColumnProps {\n  title: string;\n  tasks: TaskType[];\n  state: TaskState;\n}\n\nexport function Column({ title, tasks, state }: ColumnProps) {\n  const { setNodeRef } = useDroppable({\n    id: state,\n  });\n\n  return (\n    <div className=\"bg-gray-100 p-4 rounded-lg w-80\">\n      <h2 className=\"font-bold mb-4 text-black\">{title}</h2>\n      <div ref={setNodeRef} className=\"min-h-[500px]\">\n        {tasks.map(task => (\n          <Task key={task.id} task={task} />\n        ))}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;;;AAQO,SAAS,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAe;;IACzD,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAClC,IAAI;IACN;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,6LAAC;gBAAI,KAAK;gBAAY,WAAU;0BAC7B,MAAM,GAAG,CAAC,CAAA,qBACT,6LAAC,6HAAA,CAAA,OAAI;wBAAe,MAAM;uBAAf,KAAK,EAAE;;;;;;;;;;;;;;;;AAK5B;GAfgB;;QACS,8JAAA,CAAA,eAAY;;;KADrB"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/components/KanbanBoard.tsx"],"sourcesContent":["import React from 'react';\nimport { Task, TaskState } from '../types';\nimport { Column } from './Column';\nimport { DndContext, DragEndEvent } from '@dnd-kit/core';\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = React.useState<Task[]>([]);\n\n  React.useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await fetch('/api');\n      if (!response.ok) {\n        console.error('Failed to fetch tasks:', response.statusText);\n        return;\n      }\n      const data = await response.json();\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n\n  const handleDragEnd = async (event: DragEndEvent) => {\n    const { active, over } = event;\n    \n    if (!over) return;\n\n    const taskId = active.id;\n    const newState = over.id as TaskState;\n\n    // Update task state locally\n    setTasks(tasks.map(task => \n      task.id === taskId ? { ...task, state: newState } : task\n    ));\n\n    // Update task state in the database\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ state: newState }),\n      });\n\n      if (!response.ok) {\n        console.error('Failed to update task state');\n        // Optionally revert the local state change\n      }\n    } catch (error) {\n      console.error('Error updating task state:', error);\n    }\n  };\n\n  const todoTasks = tasks.filter(task => task.state === TaskState.ToDo);\n  const inProgressTasks = tasks.filter(task => task.state === TaskState.InProgress);\n  const completedTasks = tasks.filter(task => task.state === TaskState.Completed);\n\n  return (\n    <DndContext onDragEnd={handleDragEnd}>\n      <div className=\"p-4\">\n        <div className=\"flex gap-4\">\n          <Column title=\"To Do\" tasks={todoTasks} state={TaskState.ToDo} />\n          <Column title=\"In Progress\" tasks={inProgressTasks} state={TaskState.InProgress} />\n          <Column title=\"Completed\" tasks={completedTasks} state={TaskState.Completed} />\n        </div>\n      </div>\n    </DndContext>\n  );\n}\n\nexport default KanbanBoard;\n\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;;AAEO,SAAS;;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAS,EAAE;IAEnD,6JAAA,CAAA,UAAK,CAAC,SAAS;iCAAC;YACd,MAAM;oDAAa;oBACjB,MAAM,WAAW,MAAM,MAAM;oBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;wBAChB,QAAQ,KAAK,CAAC,0BAA0B,SAAS,UAAU;wBAC3D;oBACF;oBACA,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,SAAS;gBACX;;YACA;QACF;gCAAG,EAAE;IAEL,MAAM,gBAAgB,OAAO;QAC3B,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG;QAEzB,IAAI,CAAC,MAAM;QAEX,MAAM,SAAS,OAAO,EAAE;QACxB,MAAM,WAAW,KAAK,EAAE;QAExB,4BAA4B;QAC5B,SAAS,MAAM,GAAG,CAAC,CAAA,OACjB,KAAK,EAAE,KAAK,SAAS;gBAAE,GAAG,IAAI;gBAAE,OAAO;YAAS,IAAI;QAGtD,oCAAoC;QACpC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,EAAE,QAAQ,EAAE;gBACnD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,OAAO;gBAAS;YACzC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,QAAQ,KAAK,CAAC;YACd,2CAA2C;YAC7C;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,MAAM,YAAY,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK,wHAAA,CAAA,YAAS,CAAC,IAAI;IACpE,MAAM,kBAAkB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK,wHAAA,CAAA,YAAS,CAAC,UAAU;IAChF,MAAM,iBAAiB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK,wHAAA,CAAA,YAAS,CAAC,SAAS;IAE9E,qBACE,6LAAC,8JAAA,CAAA,aAAU;QAAC,WAAW;kBACrB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+HAAA,CAAA,SAAM;wBAAC,OAAM;wBAAQ,OAAO;wBAAW,OAAO,wHAAA,CAAA,YAAS,CAAC,IAAI;;;;;;kCAC7D,6LAAC,+HAAA,CAAA,SAAM;wBAAC,OAAM;wBAAc,OAAO;wBAAiB,OAAO,wHAAA,CAAA,YAAS,CAAC,UAAU;;;;;;kCAC/E,6LAAC,+HAAA,CAAA,SAAM;wBAAC,OAAM;wBAAY,OAAO;wBAAgB,OAAO,wHAAA,CAAA,YAAS,CAAC,SAAS;;;;;;;;;;;;;;;;;;;;;;AAKrF;GA/DgB;KAAA;uCAiED"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/member/page.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport KanbanBoard from '../components/KanbanBoard';\nimport LogoutButton from '../components/LogoutButton';\n\nexport default function MemberPage() {\n  const Logout = async () => {\n    const response = await fetch('/api/logout');\n    if (!response.ok) {\n      console.error('Failed to log out:', response.statusText);\n      return;\n    }\n    window.location.href = '/login';\n  };\n  return (\n    <div className=\"p-4\">\n      <div className='flex justify-between items-center mb-4'>\n        <h1 className=\"text-2xl font-bold mb-4\">My Tasks</h1>\n        <div className='mr-4 bg-gray-200 p-1.5 rounded-lg hover:bg-gray-400'>\n         <KanbanBoard />\n        </div>\n      </div>\n      <KanbanBoard />\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAKe,SAAS;IACtB,MAAM,SAAS;QACb,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,sBAAsB,SAAS,UAAU;YACvD;QACF;QACA,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IACA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,6LAAC;wBAAI,WAAU;kCACd,cAAA,6LAAC,oIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;0BAGf,6LAAC,oIAAA,CAAA,UAAW;;;;;;;;;;;AAGlB;KApBwB"}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}