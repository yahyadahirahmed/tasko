{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth, { DefaultSession, DefaultUser } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport { PrismaAdapter } from \"@next-auth/prisma-adapter\";\nimport { PrismaClient, UserType } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\n// Extend the built-in session types\ndeclare module \"next-auth\" {\n  interface Session extends DefaultSession {\n    user: {\n      id: string;\n      username: string;\n      userType: UserType;\n    } & DefaultSession[\"user\"]\n  }\n\n  interface User extends DefaultUser {\n    username: string;\n    userType: UserType;\n  }\n}\n\n// Extend JWT type\ndeclare module \"next-auth/jwt\" {\n  interface JWT {\n    username: string;\n    userType: UserType;\n  }\n}\n\nconst prisma = new PrismaClient();\n\nconst handler = NextAuth({\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        username: { label: \"Username\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        try {\n          console.log(\"Login attempt for username:\", credentials?.username);\n\n          if (!credentials?.username || !credentials?.password) {\n            console.log(\"Missing credentials\");\n            return null;\n          }\n\n          const user = await prisma.user.findUnique({\n            where: { \n              username: credentials.username \n            },\n          });\n\n          console.log(\"User found:\", !!user);\n\n          if (!user) {\n            console.log(\"No user found\");\n            return null;\n          }\n\n          const isValid = await bcrypt.compare(\n            credentials.password,\n            user.password\n          );\n\n          console.log(\"Password valid:\", isValid);\n\n          if (!isValid) {\n            console.log(\"Invalid password\");\n            return null;\n          }\n\n          return {\n            id: user.id,\n            username: user.username,\n            email: user.email,\n            userType: user.userType,\n          };\n        } catch (error) {\n          console.error(\"Auth error:\", error);\n          return null;\n        }\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.userType = user.userType;\n        token.username = user.username;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (session.user) {\n        session.user.userType = token.userType;\n        session.user.username = token.username;\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: \"/login\",\n  },\n  session: {\n    strategy: \"jwt\",\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AA0BA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAE/B,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,SAAS,CAAA,GAAA,sKAAA,CAAA,gBAAa,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAO;gBAC5C,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI;oBACF,QAAQ,GAAG,CAAC,+BAA+B,aAAa;oBAExD,IAAI,CAAC,aAAa,YAAY,CAAC,aAAa,UAAU;wBACpD,QAAQ,GAAG,CAAC;wBACZ,OAAO;oBACT;oBAEA,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;wBACxC,OAAO;4BACL,UAAU,YAAY,QAAQ;wBAChC;oBACF;oBAEA,QAAQ,GAAG,CAAC,eAAe,CAAC,CAAC;oBAE7B,IAAI,CAAC,MAAM;wBACT,QAAQ,GAAG,CAAC;wBACZ,OAAO;oBACT;oBAEA,MAAM,UAAU,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAClC,YAAY,QAAQ,EACpB,KAAK,QAAQ;oBAGf,QAAQ,GAAG,CAAC,mBAAmB;oBAE/B,IAAI,CAAC,SAAS;wBACZ,QAAQ,GAAG,CAAC;wBACZ,OAAO;oBACT;oBAEA,OAAO;wBACL,IAAI,KAAK,EAAE;wBACX,UAAU,KAAK,QAAQ;wBACvB,OAAO,KAAK,KAAK;wBACjB,UAAU,KAAK,QAAQ;oBACzB;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,eAAe;oBAC7B,OAAO;gBACT;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,QAAQ,GAAG,KAAK,QAAQ;gBAC9B,MAAM,QAAQ,GAAG,KAAK,QAAQ;YAChC;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,QAAQ,IAAI,EAAE;gBAChB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ;gBACtC,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ;YACxC;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,OAAO,oDAAyB;AAClC"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}