{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient()\n}\n\ntype PrismaClientSingleton = ReturnType<typeof prismaClientSingleton>\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClientSingleton | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? prismaClientSingleton()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC5B,OAAO,IAAI,6HAAA,CAAA,eAAY;AACzB;AAIA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI;AAEhD,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahya/Documents/FinalYearProject/tasko/app/api/tasks/%5BtaskId%5D/route.ts"],"sourcesContent":["import { prisma } from '@/app/lib/prisma';\nimport { NextResponse } from 'next/server';\nimport { TaskState } from '@prisma/client';\n\nexport async function PATCH(\n  request: Request,\n  { params }: { params: { taskId: string } }\n) {\n  try {\n    const { taskId } = params;\n    const { state } = await request.json();\n\n    const updatedTask = await prisma.task.update({\n      where: { id: taskId },\n      data: { state: state as TaskState },\n    });\n\n    return NextResponse.json(updatedTask);\n  } catch (error) {\n    console.error('Error updating task:', error);\n    return NextResponse.json(\n      { error: 'Failed to update task' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe,MACpB,OAAgB,EAChB,EAAE,MAAM,EAAkC;IAE1C,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEpC,MAAM,cAAc,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3C,OAAO;gBAAE,IAAI;YAAO;YACpB,MAAM;gBAAE,OAAO;YAAmB;QACpC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}